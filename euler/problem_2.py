# https://projecteuler.net/problem=2
# http://www.naren.me/2020-02-15-fibonacci-sequence/

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

from math import sqrt

def fibonacci(n, cache):
    if n in cache: return cache[n]
    if n < 2: return n
    k = fibonacci(n-1, cache) + fibonacci(n-2, cache)
    cache[n] = k
    return k
   
def fibonacci_formula(n):
    if n < 2: return n
    phi = (1 + sqrt(5)) / 2
    n = int(((phi ** n) - (1 - phi) ** n) / sqrt(5) )

    return n


cache = {}
even_sum = 0
for i in range(0, 35, 3):
    n = fibonacci(i, cache=cache)
    if n > 4e6:
        break
    even_sum += n

print(even_sum)
